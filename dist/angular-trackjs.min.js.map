{"version":3,"file":"angular-trackjs.min.js","names":[],"mappings":"","sources":["angular-trackjs.min.js"],"sourcesContent":["/*!\n * Angular TrackJs v0.0.8\n *\n * Â© 2015, Jamie Le Souef <jamielesouef@gmail.com>\n */\n\n(function (angular) {\n\n    'use strict';\n\n    angular.module('trackJs', []);\n\n    var configure = function (windowObj) {\n        return function (options) {\n\n            if (options && windowObj.trackJs) {\n                windowObj.trackJs.configure(options);\n            }\n        };\n    };\n\n    angular.module('trackJs').config([\"$provide\", function ($provide) {\n        $provide.decorator(\"$exceptionHandler\", [\"$delegate\", \"exceptionHandlerDecorator\", function ($delegate, exceptionHandlerDecorator) {\n            return exceptionHandlerDecorator.decorate($delegate);\n        }]);\n    }]);\n\n    angular.module('trackJs').factory('exceptionHandlerDecorator', [\"$window\", function ($window) {\n        var decorate = function ($delegate) {\n            return function (exception, cause) {\n                if ($window.trackJs) {\n                    $window.trackJs.track(exception);\n                }\n\n                $delegate(exception, cause);\n            };\n        };\n\n        return {\n            decorate: decorate\n        };\n    }]);\n\n    angular.module('trackJs').factory('trackJs', [\"$window\", function ($window) {\n\n        var ignoreErrorList = [];\n\n        var track = function (message) {\n            $window.trackJs.track(message);\n        };\n\n        var ignore = function (list) {\n           ignoreErrorList = ignoreErrorList.concat(list);\n\n            var onError = function (payload) {\n                var logError;\n\n                var validateError = function (errorCriteria) {\n                    var matchedCriteria = [],\n                        networkResponse = payload.network[0];\n\n                    angular.forEach(errorCriteria, function (errorTest, responseProp) {\n                        if (errorTest instanceof RegExp) {\n                            matchedCriteria.push(errorTest.test(networkResponse[responseProp]));\n                        } else {\n                            matchedCriteria.push(networkResponse[responseProp] === errorTest);\n                        }\n                    });\n\n                    return matchedCriteria.every(function (isTrue) {\n                        return isTrue;\n                    });\n\n                };\n\n                var hasError = function (error) {\n                    return error;\n                };\n\n                logError = ignoreErrorList\n                    .map(validateError)\n                    .some(hasError);\n\n                return !logError;\n            };\n\n            this.configure({\n                onError: onError\n            });\n        };\n\n        return {\n            track: track,\n            ignore: ignore,\n            configure: configure($window)\n        };\n    }]);\n\n    angular.module('trackJs').provider('TrackJs', function () {\n        this.configure = configure(window);\n        this.$get = angular.noop;\n    });\n\n})\n(angular);\n"],"sourceRoot":"/source/"}